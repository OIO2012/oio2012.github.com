<html><!-- строчка рекламы by.ru -->
<script language="JavaScript" type="text/javascript" src="../../../more.by.ru/up/up.js-312599424" tppabs="http://more.by.ru/up/up.js?312599424"></script>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML>
<!--
This document was converted from RTF source: 
By rtftohtml 4.17
See http://www.sunpack.com/RTF
Filename:HardDrive:Desktop Folder:0672315947:emacs.rtf
Application Directory:HardDrive:Desktop Folders:Converters:ERL-SEU(4.17):r2h
Subject:
Author:enduser
Operator:End User
Document Comments:
Version Comments:
Comments:
Keywords:
Translation Date:08/11/1999
Translation Time:22:05:24
Translation Platform:MacOS
Number of Output files:226
This File:HardDrive:Desktop Folder:0672315947:emacs189.htm
SplitDepth=2
SkipNavPanel=1
SkipLeadingToc=0
SkipTrailingToc=1
GenContents=1
GenFrames=0
GenIndex=1
-->
<HEAD lang="en"><LINK rel="stylesheet" href="graphics/pkbstyle.css" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/pkbstyle.css">
<META NAME="CATEGORY" CONTENT="0672315947">
<META NAME="BOOKTITLE" CONTENT="Sams Teach Yourself Emacs in 24 Hours">
<TITLE>Hour 22: Learning Lisp Basics: Values in Lisp</TITLE>




</SCRIPT><!--Begin Popup Script-->
<SCRIPT LANGUAGE="JavaScript">
<!--
function popUp(pPage) {
 figLoc = '' + document.location;
 if (figLoc.indexOf('/') == -1 && figLoc.indexOf('\\') >= 0) {
   slash = '\\';
 } else {
   slash = '/';
 }
 openLoc = figLoc.substring(0, figLoc.lastIndexOf(slash) + 1);
 while (pPage.substring(0,3) == '../') {
   openLoc = openLoc.substring(0, openLoc.lastIndexOf(slash, openLoc.length - 2) + 1);
   pPage = pPage.substring(3, pPage.length + 1);
 }
 popUpWin = window.open('','popWin','resizable=1,scrollbars=1,location=0,toolbar=0,width=525,height=394');
 figDoc = popUpWin.document;
 zhtm= '<HTML><HEAD><TITLE>' + pPage + '</TITLE>';
 zhtm += '</head>';
 zhtm += '<BODY bgcolor="#FFFFFF">';
 zhtm += '<IMG SRC="' + openLoc + pPage + '">';
 zhtm += '<P><B>' + pPage.substring(pPage.lastIndexOf('/') + 1, pPage.length) + '</B> ';
 zhtm += '</BODY></HTML>';
 figDoc.write(zhtm);
 figDoc.close();
}
// modified 3.1.99 RWE v4.1 -->
</SCRIPT>

<!--End Popup Script--></HEAD>

<BODY bgcolor=#FFFFFF >
<TABLE border="0" width="99%" cellspacing="0" cellpadding="3">
  <TR> 
    <TD background="graphics/blstrbkg.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/blstrbkg.gif"  bgcolor="#666699"> 
      <P> <FONT color="#FFFFFF"><B>Sams Teach Yourself Emacs<FONT size="1"></FONT> 
        in 24 Hours</B> </FONT></P>
    </TD>
    <TD background="graphics/blstrbkg.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/blstrbkg.gif" bgcolor="#666699"><FONT size="2"><IMG src="../style/dot.gif" tppabs="http://freebooks.by.ru/view/style/dot.gif" width="10" height="1"></FONT></TD>
    <TD background="graphics/blstrbkg.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/blstrbkg.gif" bgcolor="#666699" nowrap align="right"> 
      <P><A href="index.htm" tppabs="http://freebooks.by.ru/view/EmacsIn24h/index.htm"><FONT size="2" color="#FFFFFF">Contents</FONT></A><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"><A href="bkindex.htm" tppabs="http://freebooks.by.ru/view/EmacsIn24h/bkindex.htm"><FONT size="2" color="#FFFFFF">Index</FONT></A></P>
    </TD>
  </TR>
  <TR> 
    <TD bgcolor="#AAAAAA" height="16"> 
      <P><FONT size="2">Hour 22: Learning Lisp Basics</FONT></P>
    </TD>
    <TD bgcolor="#AAAAAA" height="16"><FONT size="2"><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"></FONT></TD>
    <TD bgcolor="#AAAAAA" height="16" align="right" nowrap> 
      <P><FONT size="2"><A href="emacs180.htm" tppabs="http://freebooks.by.ru/view/EmacsIn24h/emacs180.htm"><IMG src="graphics/prev-on.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/prev-on.gif" width="7" height="5" border="0">Previous 
        Hour</A><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"><A href="emacs197.htm" tppabs="http://freebooks.by.ru/view/EmacsIn24h/emacs197.htm">Next 
        Hour<IMG src="graphics/next-on.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/next-on.gif" width="7" height="5" border="0"></A></FONT></P>
    </TD>
  </TR>
  <TR> 
    <TD bgcolor="#DDDDDD"> 
      <TABLE border="0" cellspacing="0" cellpadding="0" dwcopytype="CopyTableRow">
        <TR valign="top"> 
          <TD> 
            <P></P>
            <P><FONT size="2">Sections in this Hour:</FONT></P>
          </TD>
          <TD><FONT size="2"><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"></FONT></TD>
          <TD><FONT size="2"><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"></FONT></TD>
        </TR>
        <TR valign="top"> 
          <TD> 
            <P class="navigation"><FONT size="1"><A href="emacs188.htm#c1" tppabs="http://freebooks.by.ru/view/EmacsIn24h/emacs188.htm#c1">The 
              Purpose of Lisp</A> </FONT></P>
          </TD>
          <TD><FONT size="2"><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"></FONT></TD>
          <TD> 
            <P class="navigation"><FONT size="1"><A href="emacs192.htm" tppabs="http://freebooks.by.ru/view/EmacsIn24h/emacs192.htm">Organization 
              of Your Configurations</A> </FONT></P>
          </TD>
        </TR>
        <TR valign="top"> 
          <TD> 
            <P class="navigation"><FONT size="1">Values in Lisp</FONT></P>
          </TD>
          <TD><FONT size="2"><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"></FONT></TD>
          <TD> 
            <P class="navigation"><FONT size="1"><A href="emacs193.htm" tppabs="http://freebooks.by.ru/view/EmacsIn24h/emacs193.htm">Summary</A> 
              </FONT></P>
          </TD>
        </TR>
        <TR valign="top"> 
          <TD> 
            <P class="navigation"><FONT size="1"><A href="emacs190.htm" tppabs="http://freebooks.by.ru/view/EmacsIn24h/emacs190.htm">Assigning 
              Variables</A> </FONT></P>
          </TD>
          <TD><FONT size="2"><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"></FONT></TD>
          <TD> 
            <P class="navigation"><FONT size="1"><A href="emacs194.htm" tppabs="http://freebooks.by.ru/view/EmacsIn24h/emacs194.htm">Q&amp;A</A> 
              </FONT></P>
          </TD>
        </TR>
        <TR valign="top"> 
          <TD> 
            <P class="navigation"><FONT size="1"><A href="emacs191.htm" tppabs="http://freebooks.by.ru/view/EmacsIn24h/emacs191.htm">Function 
              Definitions</A> </FONT></P>
          </TD>
          <TD><FONT size="2"><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"></FONT></TD>
          <TD> 
            <P class="navigation"><FONT size="1"><A href="emacs195.htm" tppabs="http://freebooks.by.ru/view/EmacsIn24h/emacs195.htm">Exercises</A> 
              </FONT></P>
          </TD>
        </TR>
      </TABLE>
    </TD>
    <TD bgcolor="#DDDDDD">&nbsp;</TD>
    <TD bgcolor="#DDDDDD" align="right" nowrap valign="bottom"> 
      <P class="navigation"><FONT size="2"><A href="emacs188.htm#c1" tppabs="http://freebooks.by.ru/view/EmacsIn24h/emacs188.htm#c1"><IMG src="graphics/prev-on.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/prev-on.gif" width="7" height="5" border="0">Previous 
        Section</A><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"><A href="emacs190.htm" tppabs="http://freebooks.by.ru/view/EmacsIn24h/emacs190.htm">Next 
        Section<IMG src="graphics/next-on.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/next-on.gif" width="7" height="5" border="0"></A></FONT></P>
    </TD>
  </TR>
</TABLE>
<H2><A name="c1"></A> Values in Lisp </H2>
<TABLE border="0" cellspacing="0" cellpadding="0">
  <TR valign="top"> 
    <TD> 
      <P class="navigation"><FONT size="1"><A href="#Heading446">Booleans</A></FONT></P>
    </TD>
    <TD><FONT size="2"><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"></FONT></TD>
    <TD> 
      <P class="navigation"><FONT size="1"><A href="#Heading450">Lists</A></FONT></P>
    </TD>
  </TR>
  <TR valign="top"> 
    <TD> 
      <P class="navigation"><FONT size="1"><A href="#Heading447">Numbers</A></FONT></P>
    </TD>
    <TD><FONT size="2"><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"></FONT></TD>
    <TD> 
      <P class="navigation"><FONT size="1"><A href="#Heading451">Association Lists 
        (alist)</A></FONT></P>
    </TD>
  </TR>
  <TR valign="top"> 
    <TD> 
      <P class="navigation"><FONT size="1"><A href="#Heading448">String</A></FONT></P>
    </TD>
    <TD><FONT size="2"><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"></FONT></TD>
    <TD> 
      <P class="navigation"><FONT size="1"><A href="#Heading452">Operations on 
        Lists</A> </FONT></P>
    </TD>
  </TR>
  <TR valign="top"> 
    <TD> 
      <P class="navigation"><FONT size="1"><A href="#Heading449">Symbols</A></FONT></P>
    </TD>
    <TD><FONT size="2"><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"></FONT></TD>
    <TD> 
      <P class="navigation"><FONT size="1"> </FONT></P>
    </TD>
  </TR>
</TABLE>
<BR>
<P><FONT size=2>Several
different<A name="Index8991"></A><A name="Index8992"></A><A name="Index8993"></A>
values, of course, exist in Lisp. These values are now explained using a
real-life <A name="Index8994"></A><A name="Index8995"></A><A name="Index8996"></A>example
where a need for such values exists.
</FONT></P>
<A name="Heading446"></A><H3>
Booleans</H3>
<P><FONT size=2>In
many situations <A name="Index8997"></A><A name="Index8998"></A><A name="Index8999"></A><A name="Index9000"></A>there
are two possible values for a given configuration option. The option can often
be stated as a yes/no question. An example might be: &quot;Do you want a blank
line inserted if you ask Emacs to move point to the next line, when you already
are located at the last line of the buffer?&quot; The value to an answer of the
preceding question is a truth value, either true or false (true represents the
answer 
<I>yes</I>,
and false represents 
<I>no</I>,
in the given example).
</FONT></P><P><FONT size=2>The
value 
<I>true</I>
is in Lisp represented using the character 
<SPAN class=compcode>t</SPAN>,
and false is represented using nil. The reason for this strange convention is
merely one of historical reasons. Thus telling Emacs that it should insert a
blank line is done using the line
</FONT></P>

<PRE class="compcode"><FONT size=3>
<SPAN class=compcode>(setq next-line-add-newlines t)</SPAN>
</FONT></PRE>
<P><FONT size=2>whereas
telling Emacs not to insert a blank line is done by inserting the<A name="Index9001"></A><A name="Index9002"></A><A name="Index9003"></A><A name="Index9004"></A>
line
</FONT></P>

<PRE class="compcode"><FONT size=3>
<SPAN class=compcode>(setq next-line-add-newlines nil)</SPAN>
</FONT></PRE>
<A name="Heading447"></A><H3>
Numbers</H3>
<P><FONT size=2>Numbers
are also <A name="Index9005"></A><A name="Index9006"></A><A name="Index9007"></A><A name="Index9008"></A>a
value type needed in Emacs. Examples of the use of numbers include the number
of backups to keep, the number of characters to indent when programming C, and
the maximum size of buffers to fontify with font-lock mode. Numbers are specified<A name="Index9009"></A><A name="Index9010"></A><A name="Index9011"></A><A name="Index9012"></A>
as is.
</FONT></P>
<A name="Heading448"></A><H3>
String</H3>
<P><FONT size=2>Strings
are used <A name="Index9013"></A><A name="Index9014"></A><A name="Index9015"></A><A name="Index9016"></A>in
Emacs in many different situations. Most of these situations are when
programming Lisp. Examples of these might be a string of text to search for, a
message sent to the user, and names of different things such as buffers, files,
and bookmarks. When customizing things in your 
<SPAN class=compcode>.emacs</SPAN>
file, you often use strings for directory or filenames and regular expressions.
String are represented by placing quotation marks around the string. An<A name="Index9017"></A><A name="Index9018"></A><A name="Index9019"></A><A name="Index9020"></A>
example is
</FONT></P>

<PRE class="compcode"><FONT size=3>
<SPAN class=compcode>(setq abbrev-file-name &quot;/home/blackie/Abbreviations&quot;)</SPAN>
</FONT></PRE>
<TABLE border="0" width="90%" cellspacing="0" cellpadding="3" align="center"><TR><TD bgcolor="#DDDDDD"><P><FONT size=2><B class="specialgreen">Note -</B>
If
the string contains <A name="Index9021"></A><A name="Index9022"></A><A name="Index9023"></A><A name="Index9024"></A>a
backslash, you need to escape it. Thus the regular expression that matches the
word &quot;.Emacs&quot; (that is, a period, the letter E, and so on) looks like
&quot;\.Emacs&quot; (the period needs to be escaped otherwise it would mean any
single character). To insert this regular expression into a string, you need to
escape the backslash, and the result is<A name="Index9025"></A><A name="Index9026"></A><A name="Index9027"></A><A name="Index9028"></A>
thus &quot;\\.Emacs&quot;.
</FONT></P></TD></TR></TABLE>
<A name="Heading449"></A>
<H3>
Symbols</H3>
<P><FONT size=2>In
Emacs, a data type <A name="Index9029"></A><A name="Index9030"></A><A name="Index9031"></A><A name="Index9032"></A>called
<I>symbols</I>
exists. The difference between a symbol and a string is too technical if you
are not a programmer, so in this case you might think about symbols as another
way of writing a string.
</FONT></P><P><FONT size=2>Symbols
are written by putting a single quotation mark in front of the name <A name="Index9033"></A><A name="Index9034"></A><A name="Index9035"></A><A name="Index9036"></A>as
in  
<SPAN class=compcode>&#039;do-backup</SPAN>.</FONT></P>
<TABLE border="0" width="90%" cellspacing="0" cellpadding="3" align="center"><TR><TD bgcolor="#DDDDDD"><P><FONT size=2><B class="specialgreen">Note -</B>
If
you are a programmer, this is the difference between a symbol and a string. A 
<I>symbol</I>
is <A name="Index9037"></A><A name="Index9038"></A><A name="Index9039"></A><A name="Index9040"></A>an
object that can be compared to another object in constant time. Emacs can, for
example, answer whether 
<SPAN class=compcode>&#039;aaaaab</SPAN>
is equal to 
<SPAN class=compcode>&#039;aaaaac</SPAN>
in<A name="Index9041"></A><A name="Index9042"></A><A name="Index9043"></A><A name="Index9044"></A>
constant time. On the other hand for Emacs to compare the <A name="Index9045"></A><A name="Index9046"></A><A name="Index9047"></A><A name="Index9048"></A>strings
<SPAN class=compcode>&quot;aaaab&quot;</SPAN>
and 
<SPAN class=compcode>&quot;aaaaac&quot;</SPAN>,
it needs to compare the first character and, if these are the same, it must
compare the second character, and so on. Thus the time it takes to compare two
strings is equal to the length <A name="Index9049"></A><A name="Index9050"></A><A name="Index9051"></A><A name="Index9052"></A>of
the strings.
</FONT></P></TD></TR></TABLE>
<A name="Heading450"></A>
<H3>
Lists</H3>
<P><FONT size=2>You
often need to <A name="Index9053"></A><A name="Index9054"></A><A name="Index9055"></A><A name="Index9056"></A>list
a number of values. Examples of this include
</FONT></P>
<UL>
<LI><P><FONT size=2>		A
list of directories for Emacs to search for template files
</FONT></P></LI><P></P><LI><P><FONT size=2>		A
list of indexes counted from the beginning of the line, where a tab stop should
exist
</FONT></P></LI><P></P><LI>
    <P><FONT size=2> A list of split methods as seen in <A href="emacs180.htm" tppabs="http://freebooks.by.ru/view/EmacsIn24h/emacs180.htm">Hour 
      21, &quot;Advanced Gnus&quot; </A></FONT></P>
  </LI></UL><P></P><P><FONT size=2>Lists
are specified by listing each of the elements within a pair of parentheses, the
outermost list must be prefixed with a quote, as discussed later in <A name="Index9057"></A><A name="Index9058"></A><A name="Index9059"></A><A name="Index9060"></A>this
hour. The following are examples of lists:
</FONT></P>

<PRE class="compcode"><FONT size=3>
<SPAN class=compcode>1. (setq tab-stop-list &#039;(2 4 6 8 10 12 14 16 18 20)) </SPAN>
<SPAN class=compcode>2. (setq template-default-directories </SPAN>
<SPAN class=compcode>       &#039;(&quot;~/Templates&quot; &quot;/usr/local/Templates&quot;)) </SPAN>
<SPAN class=compcode>3. (setq nnmail-split-methods &#039;( </SPAN>
<SPAN class=compcode>       (&quot;debian-devel&quot; &quot;^To:.*debian-devel@lists.debian.org&quot;) </SPAN>
<SPAN class=compcode>       (&quot;postcard&quot; &quot;^Subject:.*Postcard:&quot;) </SPAN>
<SPAN class=compcode>       (&quot;Miscellaneous&quot; &quot;&quot;))) </SPAN>
</FONT></PRE>
<P><FONT size=2>The
first example is a list of numbers, and the second is a list of strings. The
third example is a list of lists. Each of these lists contain two elements that
are strings.
</FONT></P><P><FONT size=2>The
list must be prefixed with a quote, otherwise the Lisp interpreter thinks that
the first element of the list is a function for it to execute, and the rest of
the elements are arguments to the function. Thus if you write
</FONT></P>

<PRE class="compcode"><FONT size=3>
<SPAN class=compcode>(setq a (+ 1 2))</SPAN>
</FONT></PRE>
<P><FONT size=2>then
the Lisp interpreter assigns the value 
<SPAN class=compcode>3</SPAN>
to the variable 
<SPAN class=compcode>a</SPAN>.
If, on the other hand, you write
</FONT></P>

<PRE class="compcode"><FONT size=3>
<SPAN class=compcode>(setq a &#039;(+ 1 2))</SPAN>
</FONT></PRE>
<P><FONT size=2>the
list with three elements, namely the symbol 
<SPAN class=compcode>+</SPAN>
as the first element, 
<SPAN class=compcode>1</SPAN>
as the <A name="Index9061"></A><A name="Index9062"></A><A name="Index9063"></A><A name="Index9064"></A>second,
and 
<SPAN class=compcode>2</SPAN>
as the third, is assigned to the variable.
</FONT></P>
<A name="Heading451"></A><H3>
Association
Lists (alist)
</H3>
<P><FONT size=2>An
association list<A name="Index9065"></A><A name="Index9066"></A><A name="Index9067"></A><A name="Index9068"></A><A name="Index9069"></A><A name="Index9070"></A>
is a map from a key to a value. An example of this data type is 
<SPAN class=compcode>auto-mode-alist</SPAN>,
which is a variable that describes which major mode to start based on the
filename. A regular expression describing properties for the filename is the
key, whereas the name of the major-mode is the value. A key/value pair is
listed like a list, with the exception that a period is inserted in between.
This can be seen from the following  example:
</FONT></P>

<PRE class="compcode"><FONT size=3>
<SPAN class=compcode>(setq auto-mode-alist &#039;( </SPAN>
<SPAN class=compcode>  (&quot;\\.gnus$&quot; . emacs-lisp-mode) </SPAN>
<SPAN class=compcode>  (&quot;\\.py$&quot; . python-mode) </SPAN>
<SPAN class=compcode>  (&quot;\\.c\\&#039;&quot; . c-mode) </SPAN>
<SPAN class=compcode>  (&quot;\\.h\\&#039;&quot; . c-mode) </SPAN>
<SPAN class=compcode>  (&quot;[Mm]akefile&quot;  . makefile-mode) </SPAN>
<SPAN class=compcode>)) </SPAN>
</FONT></PRE>
<P><FONT size=2>To
be completely accurate, the preceding code is a list, in which each individual
element is itself a list (although it is a special kind of<A name="Index9071"></A><A name="Index9072"></A><A name="Index9073"></A><A name="Index9074"></A><A name="Index9075"></A><A name="Index9076"></A>
list).
</FONT></P>
<A name="Heading452"></A><H3>
Operations
on Lists
</H3>
<P><FONT size=2>Often
you do not<A name="Index9077"></A><A name="Index9078"></A><A name="Index9079"></A><A name="Index9080"></A><A name="Index9081"></A>
want to create a new list, but rather modify an existing one. An example of
this is the list of directories where Emacs searches for Lisp files. You do not
want to replace the existing list of directories whenever you have an
additional directory for Emacs to look in. Instead you want to tell Emacs to
look in the directories it is used to and your new directory.
</FONT></P><P><FONT size=2>Whether
your new element should be added to the front of the list or the end of the
list depends on what your intentions are. In the example, adding the directory
to the front of the list means that Lisp files in your new directory take
precedence over the others. That is, if a Lisp file exists both in your new
directory and in one of the directories from the original set of directories,
Emacs uses the one from your new directory. Likewise, if you add your directory
to the end of the list, a file from your directory only is used, if it is in
none of the other <A name="Index9082"></A><A name="Index9083"></A><A name="Index9084"></A><A name="Index9085"></A><A name="Index9086"></A>directories.</FONT></P>
<A name="Heading453"></A><H4>
Inserting
in the Front of a List
</H4>
<P><FONT size=2>Adding
an element to <A name="Index9087"></A><A name="Index9088"></A><A name="Index9089"></A><A name="Index9090"></A><A name="Index9091"></A>the
front of the list is done using the function 
<SPAN class=compcode>cons</SPAN>.
This function takes an element to add and a list, and returns a new list as a
result. Thus, to add the directory called 
<SPAN class=compcode>~/Lisp-files</SPAN>,
you should insert the following into your 
<SPAN class=compcode>.emacs</SPAN>
file:
</FONT></P>

<PRE class="compcode"><FONT size=3>
<SPAN class=compcode>(setq load-path (cons &quot;~/Lisp-files&quot; load-path))</SPAN>
</FONT></PRE>
<P><FONT size=2>The
code says that the string 
<SPAN class=compcode>~/Lisp-files</SPAN>
should be inserted at the front of the list  contained in the variable 
<SPAN class=compcode>load-path</SPAN>.
The result should be inserted into the variable 
<SPAN class=compcode>load-path</SPAN>
again. (This way the variable 
<SPAN class=compcode>load-path</SPAN>
is updated.) The parenthesis in front of the word 
<SPAN class=compcode>cons</SPAN>
tells Lisp that 
<SPAN class=compcode>cons</SPAN>
is a function it should execute. This is discussed later.
</FONT></P><P><FONT size=2>To
insert two elements in front of the variable 
<SPAN class=compcode>load-path</SPAN>,
you can write something like:
</FONT></P>

<PRE class="compcode"><FONT size=3>
<SPAN class=compcode>(setq load-path </SPAN>
<SPAN class=compcode>   (cons &quot;~/Lisp-files/Major-modes&quot; </SPAN>
<SPAN class=compcode>       (cons &quot;~/Lisp-files/Minor-modes&quot; load-path))) </SPAN>
</FONT></PRE>
<P><FONT size=2>To
read the previous example, you must read from the inside out. First the string  
<SPAN class=compcode>~/Lisp-files/Minor-modes</SPAN>
is inserted in the front of the list from the variable 
<SPAN class=compcode>load-path</SPAN>.
This results in a new list. Next the string 
<SPAN class=compcode>~/Lisp-files/Major-modes</SPAN>
is inserted in the front of the just-made list, and this new list is finally
inserted into the<A name="Index9092"></A><A name="Index9093"></A><A name="Index9094"></A><A name="Index9095"></A><A name="Index9096"></A>
variable  
<SPAN class=compcode>load-path</SPAN>.</FONT></P>
<A name="Heading454"></A><H4>
Inserting
at the End of a List
</H4>
<P><FONT size=2>Inserting
elements <A name="Index9097"></A><A name="Index9098"></A><A name="Index9099"></A><A name="Index9100"></A><A name="Index9101"></A>at
the end of the list is done by forming a list and appending this newly formed
list to the end of the original list. Thus you do not insert an element to the
end of a list.
</FONT></P>
<TABLE border="0" width="90%" cellspacing="0" cellpadding="3" align="center"><TR><TD bgcolor="#DDDDDD"><P><FONT size=2><B class="specialgreen">Note -</B>
Lists
are <A name="Index9102"></A><A name="Index9103"></A><A name="Index9104"></A><A name="Index9105"></A><A name="Index9106"></A>implemented
by having a pointer to the front of the list. Adding an element to the front of
the list is done in constant time, but inserting an element to the end of a
list takes time equal to the length of the list. Forcing you to append a list
of elements to a list rather than simply insert at the end several times makes
you aware of the<A name="Index9107"></A><A name="Index9108"></A><A name="Index9109"></A><A name="Index9110"></A><A name="Index9111"></A>
time it takes.
</FONT></P></TD></TR></TABLE><BR>
<P><FONT size=2>Thus
to insert the two directories to the end of the list, insert the following <A name="Index9112"></A><A name="Index9113"></A><A name="Index9114"></A><A name="Index9115"></A><A name="Index9116"></A>into
your 
<SPAN class=compcode>.emacs</SPAN>
file:
</FONT></P>

<PRE class="compcode"><FONT size=3>
<SPAN class=compcode>(setq load-path (append load-path &#039;(&quot;~/Lisp-files/Major-modes&quot; </SPAN>
<SPAN class=compcode>                                    &quot;~/Lisp-files/Minor-modes&quot;))) </SPAN>
</FONT></PRE>
<TABLE border="0" width="99%" cellspacing="0" cellpadding="3">
  <TR> 
    <TD background="graphics/blstrbkg.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/blstrbkg.gif"  bgcolor="#666699"> 
      <P> <FONT color="#FFFFFF"><B>Sams Teach Yourself Emacs<FONT size="1"></FONT> 
        in 24 Hours</B> </FONT></P>
    </TD>
    <TD background="graphics/blstrbkg.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/blstrbkg.gif" bgcolor="#666699"><FONT size="2"><IMG src="../style/dot.gif" tppabs="http://freebooks.by.ru/view/style/dot.gif" width="10" height="1"></FONT></TD>
    <TD background="graphics/blstrbkg.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/blstrbkg.gif" bgcolor="#666699" nowrap align="right"> 
      <P><A href="index.htm" tppabs="http://freebooks.by.ru/view/EmacsIn24h/index.htm"><FONT size="2" color="#FFFFFF">Contents</FONT></A><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"><A href="bkindex.htm" tppabs="http://freebooks.by.ru/view/EmacsIn24h/bkindex.htm"><FONT size="2" color="#FFFFFF">Index</FONT></A></P>
    </TD>
  </TR>
  <TR> 
    <TD bgcolor="#AAAAAA" height="16"> 
      <P><FONT size="2">Hour 22: Learning Lisp Basics</FONT></P>
    </TD>
    <TD bgcolor="#AAAAAA" height="16"><FONT size="2"><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"></FONT></TD>
    <TD bgcolor="#AAAAAA" height="16" align="right" nowrap> 
      <P><FONT size="2"><A href="emacs180.htm" tppabs="http://freebooks.by.ru/view/EmacsIn24h/emacs180.htm"><IMG src="graphics/prev-on.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/prev-on.gif" width="7" height="5" border="0">Previous 
        Hour</A><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"><A href="emacs197.htm" tppabs="http://freebooks.by.ru/view/EmacsIn24h/emacs197.htm">Next 
        Hour<IMG src="graphics/next-on.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/next-on.gif" width="7" height="5" border="0"></A></FONT></P>
    </TD>
  </TR>
  <TR> 
    <TD bgcolor="#DDDDDD"> 
      <TABLE border="0" cellspacing="0" cellpadding="0" dwcopytype="CopyTableRow">
        <TR valign="top"> 
          <TD> 
            <P></P>
            <P><FONT size="2">Sections in this Hour:</FONT></P>
          </TD>
          <TD><FONT size="2"><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"></FONT></TD>
          <TD><FONT size="2"><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"></FONT></TD>
        </TR>
        <TR valign="top"> 
          <TD> 
            <P class="navigation"><FONT size="1"><A href="emacs188.htm#c1" tppabs="http://freebooks.by.ru/view/EmacsIn24h/emacs188.htm#c1">The 
              Purpose of Lisp</A> </FONT></P>
          </TD>
          <TD><FONT size="2"><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"></FONT></TD>
          <TD> 
            <P class="navigation"><FONT size="1"><A href="emacs192.htm" tppabs="http://freebooks.by.ru/view/EmacsIn24h/emacs192.htm">Organization 
              of Your Configurations</A> </FONT></P>
          </TD>
        </TR>
        <TR valign="top"> 
          <TD> 
            <P class="navigation"><FONT size="1">Values in Lisp</FONT></P>
          </TD>
          <TD><FONT size="2"><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"></FONT></TD>
          <TD> 
            <P class="navigation"><FONT size="1"><A href="emacs193.htm" tppabs="http://freebooks.by.ru/view/EmacsIn24h/emacs193.htm">Summary</A> 
              </FONT></P>
          </TD>
        </TR>
        <TR valign="top"> 
          <TD> 
            <P class="navigation"><FONT size="1"><A href="emacs190.htm" tppabs="http://freebooks.by.ru/view/EmacsIn24h/emacs190.htm">Assigning 
              Variables</A> </FONT></P>
          </TD>
          <TD><FONT size="2"><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"></FONT></TD>
          <TD> 
            <P class="navigation"><FONT size="1"><A href="emacs194.htm" tppabs="http://freebooks.by.ru/view/EmacsIn24h/emacs194.htm">Q&amp;A</A> 
              </FONT></P>
          </TD>
        </TR>
        <TR valign="top"> 
          <TD> 
            <P class="navigation"><FONT size="1"><A href="emacs191.htm" tppabs="http://freebooks.by.ru/view/EmacsIn24h/emacs191.htm">Function 
              Definitions</A> </FONT></P>
          </TD>
          <TD><FONT size="2"><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"></FONT></TD>
          <TD> 
            <P class="navigation"><FONT size="1"><A href="emacs195.htm" tppabs="http://freebooks.by.ru/view/EmacsIn24h/emacs195.htm">Exercises</A> 
              </FONT></P>
          </TD>
        </TR>
      </TABLE>
    </TD>
    <TD bgcolor="#DDDDDD">&nbsp;</TD>
    <TD bgcolor="#DDDDDD" align="right" nowrap valign="bottom"> 
      <P class="navigation"><FONT size="2"><A href="emacs188.htm#c1" tppabs="http://freebooks.by.ru/view/EmacsIn24h/emacs188.htm#c1"><IMG src="graphics/prev-on.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/prev-on.gif" width="7" height="5" border="0">Previous 
        Section</A><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"><A href="emacs190.htm" tppabs="http://freebooks.by.ru/view/EmacsIn24h/emacs190.htm">Next 
        Section<IMG src="graphics/next-on.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/next-on.gif" width="7" height="5" border="0"></A></FONT></P>
    </TD>
  </TR>
</TABLE>
<P class="copyright"><FONT size=2>&#169; Copyright Macmillan USA. All rights reserved.</FONT> 
</P>
</BODY>

</HTML>
