<html><!-- строчка рекламы by.ru -->
<script language="JavaScript" type="text/javascript" src="../../../more.by.ru/up/up.js-1896168768" tppabs="http://more.by.ru/up/up.js?1896168768"></script>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML>
<!--
This document was converted from RTF source: 
By rtftohtml 4.17
See http://www.sunpack.com/RTF
Filename:HardDrive:Desktop Folder:0672315947:emacs.rtf
Application Directory:HardDrive:Desktop Folders:Converters:ERL-SEU(4.17):r2h
Subject:
Author:enduser
Operator:End User
Document Comments:
Version Comments:
Comments:
Keywords:
Translation Date:08/11/1999
Translation Time:22:05:29
Translation Platform:MacOS
Number of Output files:226
This File:HardDrive:Desktop Folder:0672315947:emacs200.htm
SplitDepth=2
SkipNavPanel=1
SkipLeadingToc=0
SkipTrailingToc=1
GenContents=1
GenFrames=0
GenIndex=1
-->
<HEAD lang="en"><LINK rel="stylesheet" href="graphics/pkbstyle.css" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/pkbstyle.css">
<META NAME="CATEGORY" CONTENT="0672315947">
<META NAME="BOOKTITLE" CONTENT="Sams Teach Yourself Emacs in 24 Hours">
<TITLE>Hour 23: Binding Keys and Creating Menus: Key Sequences and Keymaps</TITLE>




<!--Begin Popup Script-->
<SCRIPT LANGUAGE="JavaScript">
<!--
function popUp(pPage) {
 figLoc = '' + document.location;
 if (figLoc.indexOf('/') == -1 && figLoc.indexOf('\\') >= 0) {
   slash = '\\';
 } else {
   slash = '/';
 }
 openLoc = figLoc.substring(0, figLoc.lastIndexOf(slash) + 1);
 while (pPage.substring(0,3) == '../') {
   openLoc = openLoc.substring(0, openLoc.lastIndexOf(slash, openLoc.length - 2) + 1);
   pPage = pPage.substring(3, pPage.length + 1);
 }
 popUpWin = window.open('','popWin','resizable=1,scrollbars=1,location=0,toolbar=0,width=525,height=394');
 figDoc = popUpWin.document;
 zhtm= '<HTML><HEAD><TITLE>' + pPage + '</TITLE>';
 zhtm += '</head>';
 zhtm += '<BODY bgcolor="#FFFFFF">';
 zhtm += '<IMG SRC="' + openLoc + pPage + '">';
 zhtm += '<P><B>' + pPage.substring(pPage.lastIndexOf('/') + 1, pPage.length) + '</B> ';
 zhtm += '</BODY></HTML>';
 figDoc.write(zhtm);
 figDoc.close();
}
// modified 3.1.99 RWE v4.1 -->
</SCRIPT>

<!--End Popup Script--></HEAD>

<BODY bgcolor=#FFFFFF >
<TABLE border="0" width="99%" cellspacing="0" cellpadding="3">
  <TR> 
    <TD background="graphics/blstrbkg.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/blstrbkg.gif"  bgcolor="#666699"> 
      <P> <FONT color="#FFFFFF"><B>Sams Teach Yourself Emacs<FONT size="1"></FONT> 
        in 24 Hours</B> </FONT></P>
    </TD>
    <TD background="graphics/blstrbkg.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/blstrbkg.gif" bgcolor="#666699"><FONT size="2"><IMG src="../style/dot.gif" tppabs="http://freebooks.by.ru/view/style/dot.gif" width="10" height="1"></FONT></TD>
    <TD background="graphics/blstrbkg.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/blstrbkg.gif" bgcolor="#666699" nowrap align="right"> 
      <P><A href="index.htm" tppabs="http://freebooks.by.ru/view/EmacsIn24h/index.htm"><FONT size="2" color="#FFFFFF">Contents</FONT></A><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"><A href="bkindex.htm" tppabs="http://freebooks.by.ru/view/EmacsIn24h/bkindex.htm"><FONT size="2" color="#FFFFFF">Index</FONT></A></P>
    </TD>
  </TR>
  <TR> 
    <TD bgcolor="#AAAAAA" height="16"> 
      <P><FONT size="2">Hour 23: Binding Keys and Creating Menus</FONT></P>
    </TD>
    <TD bgcolor="#AAAAAA" height="16"><FONT size="2"><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"></FONT></TD>
    <TD bgcolor="#AAAAAA" height="16" align="right" nowrap> 
      <P><FONT size="2"><A href="emacs188.htm" tppabs="http://freebooks.by.ru/view/EmacsIn24h/emacs188.htm"><IMG src="graphics/prev-on.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/prev-on.gif" width="7" height="5" border="0">Previous 
        Hour</A><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"><A href="emacs206.htm" tppabs="http://freebooks.by.ru/view/EmacsIn24h/emacs206.htm">Next 
        Hour<IMG src="graphics/next-on.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/next-on.gif" width="7" height="5" border="0"></A></FONT></P>
    </TD>
  </TR>
  <TR> 
    <TD bgcolor="#DDDDDD"> 
      <TABLE border="0" cellspacing="0" cellpadding="0" dwcopytype="CopyTableRow">
        <TR valign="top"> 
          <TD> 
            <P></P>
            <P><FONT size="2">Sections in this Hour:</FONT></P>
          </TD>
          <TD><FONT size="2"><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"></FONT></TD>
          <TD><FONT size="2"><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"></FONT></TD>
        </TR>
        <TR valign="top"> 
          <TD> 
            <P class="navigation"><FONT size="1"><A href="emacs197.htm#c1" tppabs="http://freebooks.by.ru/view/EmacsIn24h/emacs197.htm#c1">Keyboard 
              Modifiers</A> </FONT></P>
          </TD>
          <TD><FONT size="2"><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"></FONT></TD>
          <TD> 
            <P class="navigation"><FONT size="1"><A href="emacs201.htm" tppabs="http://freebooks.by.ru/view/EmacsIn24h/emacs201.htm">Making 
              Personal Keybindings</A> </FONT></P>
          </TD>
        </TR>
        <TR valign="top"> 
          <TD> 
            <P class="navigation"><FONT size="1"><A href="emacs198.htm" tppabs="http://freebooks.by.ru/view/EmacsIn24h/emacs198.htm">Keyboard 
              and Events</A></FONT></P>
          </TD>
          <TD><FONT size="2"><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"></FONT></TD>
          <TD> 
            <P class="navigation"><FONT size="1"><A href="emacs202.htm" tppabs="http://freebooks.by.ru/view/EmacsIn24h/emacs202.htm">Summary</A> 
              </FONT></P>
          </TD>
        </TR>
        <TR valign="top"> 
          <TD> 
            <P class="navigation"><FONT size="1"><A href="emacs199.htm" tppabs="http://freebooks.by.ru/view/EmacsIn24h/emacs199.htm">Mouse 
              and Events</A> </FONT></P>
          </TD>
          <TD><FONT size="2"><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"></FONT></TD>
          <TD> 
            <P class="navigation"><FONT size="1"><A href="emacs203.htm" tppabs="http://freebooks.by.ru/view/EmacsIn24h/emacs203.htm">Q&amp;A</A> 
              </FONT></P>
          </TD>
        </TR>
        <TR valign="top"> 
          <TD> 
            <P class="navigation"><FONT size="1">Key Sequences and Keymaps </FONT></P>
          </TD>
          <TD><FONT size="2"><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"></FONT></TD>
          <TD> 
            <P class="navigation"><FONT size="1"><A href="emacs204.htm" tppabs="http://freebooks.by.ru/view/EmacsIn24h/emacs204.htm">Exercises</A> 
              </FONT></P>
          </TD>
        </TR>
      </TABLE>
    </TD>
    <TD bgcolor="#DDDDDD">&nbsp;</TD>
    <TD bgcolor="#DDDDDD" align="right" nowrap valign="bottom"> 
      <P class="navigation"><FONT size="2"><A href="emacs199.htm" tppabs="http://freebooks.by.ru/view/EmacsIn24h/emacs199.htm"><IMG src="graphics/prev-on.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/prev-on.gif" width="7" height="5" border="0">Previous 
        Section</A><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"><A href="emacs201.htm" tppabs="http://freebooks.by.ru/view/EmacsIn24h/emacs201.htm">Next 
        Section<IMG src="graphics/next-on.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/next-on.gif" width="7" height="5" border="0"></A></FONT></P>
    </TD>
  </TR>
</TABLE>
<H2><A name="c1"></A> Key Sequences and Keymaps </H2>
<TABLE border="0" cellspacing="0" cellpadding="0">
  <TR valign="top"> 
    <TD> 
      <P class="navigation"><FONT size="1"><A href="#Heading472">Prefix Key Accesses 
        Submap</A></FONT></P>
    </TD>
    <TD><FONT size="2"><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"></FONT></TD>
    <TD> 
      <P class="navigation"><FONT size="1"><A href="#Heading479">Creating Custom 
        Keymaps in Global-Map</A></FONT></P>
    </TD>
  </TR>
  <TR valign="top"> 
    <TD> 
      <P class="navigation"><FONT size="1"><A href="#Heading473">Prefix Argument</A></FONT></P>
    </TD>
    <TD><FONT size="2"><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"></FONT></TD>
    <TD> 
      <P class="navigation"><FONT size="1"><A href="#Heading480">Know Your Environment</A></FONT></P>
    </TD>
  </TR>
  <TR valign="top"> 
    <TD> 
      <P class="navigation"><FONT size="1"><A href="#Heading474">Major Modes and 
        Keymaps</A></FONT></P>
    </TD>
    <TD><FONT size="2"><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"></FONT></TD>
    <TD> 
      <P class="navigation"><FONT size="1"><A href="#Heading481">Finding the Key 
        Sequence Syntax</A> </FONT></P>
    </TD>
  </TR>
  <TR valign="top"> 
    <TD> 
      <P class="navigation"><FONT size="1"><A href="#Heading476">Minor Modes and 
        Keymaps</A></FONT></P>
    </TD>
    <TD><FONT size="2"><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"></FONT></TD>
    <TD> 
      <P class="navigation"><FONT size="1"><A href="#Heading482">Recording and 
        Running a Macro with Easier Keybindings</A> </FONT></P>
    </TD>
  </TR>
  <TR valign="top"> 
    <TD> 
      <P> 
      <P class="navigation"><FONT size="1"><A href="#Heading478">Clearing Keybinding 
        in Keymaps</A></FONT></P>
    </TD>
    <TD><FONT size="1"><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"></FONT></TD>
    <TD> 
      <P class="navigation"><FONT size="1"><A href="#Heading483">Passing Arguments 
        to Commands</A></FONT></P>
    </TD>
  </TR>
</TABLE>
<BR>
<P><FONT size=2>A
key sequence is<A name="Index9388"></A>
the input packet that Emacs interprets as a whole. The key sequence is
associated to some action through keymap. A keymap <A name="Index9389"></A>in
Emacs is stored in a Lisp variable, which is traditionally named so that it
ends in the suffix 
<SPAN class=compcode>-keymap</SPAN>.
The most basic predefined keymaps in Emacs are the following: 
<SPAN class=compcode>global-map</SPAN>,
<SPAN class=compcode>esc-map</SPAN>,
<SPAN class=compcode>mode-specific-map</SPAN>,
<SPAN class=compcode>ctl-x-map</SPAN>,
<SPAN class=compcode>ctl-x-4-map</SPAN>,<A name="Index9390"></A>
<SPAN class=compcode>ctl-x-5-map</SPAN>.</FONT></P><P><FONT size=2>The
first <A name="Index9391"></A>one,
<SPAN class=compcode>global-map</SPAN>,
contains key definitions that are available everywhere in Emacs. Normal
keyboard characters 
<I>a</I>
and 
<I>b</I>,
and other character keys, such as Enter (which generates ASCII code 10) and the
Tab key (which generates ASCII code 9) are defined in this<A name="Index9392"></A>
map.
</FONT></P><P><FONT size=2>The
<SPAN class=compcode>esc-map</SPAN>
is part<A name="Index9393"></A>
of the 
<SPAN class=compcode>global-map</SPAN>
and handles all key sequences that are started with Esc key.
</FONT></P><P><FONT size=2>The
<SPAN class=compcode>mode-specific-map</SPAN>
is<A name="Index9394"></A>
part of the 
<SPAN class=compcode>global-map</SPAN>
and handles all the key sequences started with the 
<SPAN class=compcode>C-c</SPAN>
key. This is the keymap that Emacs has specifically <A name="Index9395"></A>reserved
for extension packages and for user keybindings.
</FONT></P><P><FONT size=2>The
<SPAN class=compcode>ctl-x-map</SPAN>
is<A name="Index9396"></A>
the keymap under which 
<SPAN class=compcode>C-x</SPAN>-derived
key sequences are interpreted. This keymap is the heart of the Emacs, because
most of the Emacs functions have been buried under the 
<SPAN class=compcode>C-x</SPAN>
key.
</FONT></P><P><FONT size=2>The
<SPAN class=compcode>ctl-x-map</SPAN>
includes two more submaps: 
<SPAN class=compcode>ctl-x-4-map</SPAN>,
where you find &quot;other window&quot; commands, and 
<SPAN class=compcode>ctl-x-5-map</SPAN>,
which contains frame-handling<A name="Index9397"></A>
commands.
</FONT></P>
<A name="Heading472"></A><H3>
Prefix
Key Accesses Submap
</H3>
<P><FONT size=2>A key sequence that <A name="Index9398"></A><A name="Index9399"></A>leads 
  to the submap--such as <SPAN class=compcode>C-x</SPAN>, <SPAN class=compcode>C-c</SPAN>, 
  <SPAN class=compcode>C-x 4</SPAN>, <SPAN class=compcode>C-x 5</SPAN>--is called 
  prefix key. A prefix can be a single key or combination of characters, modifiers, 
  and named events (complex key sequence). </FONT></P>
<P><FONT size=2>Let&#039;s
take a look what prefix is in your Emacs: Press 
<SPAN class=compcode>C-h
b
</SPAN>
(describe-bindings) and look for lines that read 
<I>Prefix
Command
</I>.
To make skimming the long listing easier, adjust it to show only the<A name="Index9400"></A><A name="Index9401"></A>
lines matching the word 
<I>prefix</I>
like this:
</FONT></P>
<DL>
<DT><DD><P>
<B><FONT size=2>1.	</FONT></B><FONT size=2>Switch
to the Help window. If modeline reads 
<SPAN class=compcode>%%</SPAN>,
call 
<SPAN class=compcode>C-x
C-q
</SPAN>
to toggle the buffer&#039;s read-only flag to the off position. Proceed when
modeline reads 
<SPAN class=compcode>--</SPAN>.</FONT></P>
<DT><DD><P>
<B><FONT size=2>2.	</FONT></B><FONT size=2>Position
the cursor at the top of the window.
</FONT></P>
<DT><DD><P>
<B><FONT size=2>3.	</FONT></B><FONT size=2>Call
the<A name="Index9402"></A><A name="Index9403"></A>
command 
<SPAN class=compcode>M-x
delete-non-matching-lines RET prefix RET</SPAN>.</FONT></DL>
<FONT size=2>
<P></P>
<TABLE border="0" width="90%" cellspacing="0" cellpadding="3" align="center">
  <TR>
    <TD bgcolor="#DDDDDD">
      <P><FONT size=2><B class="specialgreen">Note -</B> Traditionally the Help 
        key has been <SPAN class=compcode>C-h</SPAN>, but in other programs the 
        <SPAN class=compcode>f1</SPAN> key established the position to access 
        the help system. Emacs followed this tradition and added <SPAN class=compcode>f1</SPAN> 
        key to mean the same as <SPAN class=compcode>C-h</SPAN>.</FONT></P>
    </TD>
  </TR>
</TABLE>
<BR>
<P><FONT size=2>The exact listing<A name="Index9404"></A><A name="Index9405"></A> 
  depends on your configured Emacs, but <A href="javascript:popUp('graphics/ch23/23fig02.gif')">Figure 
  23.2</A> is an example of what you can expect. </FONT></P>
<P class="figcaption"><FONT size=2><B><A href="javascript:popUp('graphics/ch23/23fig02.gif')">Figure 
  23.2 </A></B><BR>
  List of prefix <A name="Index9406"></A><A name="Index9407"></A>keys.</FONT></P>
<P><FONT size=2>There are several defined prefix keys that lead to further submaps, 
  which is indicated by the wording <I>Prefix command </I>. From here you can 
  query the defined keys in a particular keymap with the key sequence <SPAN class=compcode>&lt;PREFIX-KEY&gt;</SPAN> 
  followed by <SPAN class=compcode>C-h</SPAN>. For example, to peek at what keys 
  are defined in <SPAN class=compcode>ctl-x-4-map</SPAN>, press <SPAN class=compcode>C-x 
  4 C-h</SPAN>. The listing shows us several commands in that <A name="Index9408"></A><A name="Index9409"></A>submap 
  (see <A href="javascript:popUp('graphics/ch23/23fig03.gif')">Figure 23.3</A>). </FONT></P>
<P class="figcaption"><FONT size=2><B><A href="javascript:popUp('graphics/ch23/23fig03.gif')">Figure 
  23.3</A> </B><BR>
  Keybindings<A name="Index9410"></A><A name="Index9411"></A> in <SPAN class=compcode>ctl-x-4-map</SPAN>.</FONT></P>
<A name="Heading473"></A>
<H3> Prefix Argument </H3>
<P><FONT size=2>A prefix argument<A name="Index9412"></A><A name="Index9413"></A> 
  carries extra information to the command behind key sequence. It is an additional 
  parameter that makes the command work differently than without a parameter. 
  Take a closer look at key <I>a</I>, with <SPAN class=compcode>C-h a</SPAN>:</FONT></P>
<PRE class="compcode"><FONT size=3>
<SPAN class=compcode>(self-insert-command N)</SPAN>
</FONT></PRE>
<P><FONT size=2>This command can<A name="Index9414"></A><A name="Index9415"></A> 
  accept the additional argument N (count), so how do you send it? The keys <SPAN class=compcode>C-u</SPAN> 
  (universal-argument) and Esc followed by a numeric value have been assigned 
  to be used for a prefix argument. The <SPAN class=compcode>C-u</SPAN> can be 
  distinguished from the Esc prefix key, but that depends on the command if it 
  wants to do that. <SPAN class=compcode>C-u</SPAN> can be taken as <SPAN class=compcode>C-u</SPAN> 
  (raw prefix argument &#039;(4) in Lisp), but can also be interpreted to map 
  to value 4 or a multiple of it. If you press <SPAN class=compcode>C-u C-u</SPAN>, 
  it can be counted as 4x4 = 16 (raw value would be &#039;(16) in Lisp). The <SPAN class=compcode>self-insert-command</SPAN> 
  interprets <SPAN class=compcode>C-u</SPAN> as 4, so if you press <SPAN class=compcode>C-u 
  a</SPAN>; you would get <I>a</I> repeated four times. Not very useful? Well, 
  let&#039;s draw some straight lines. <SPAN class=compcode>Try C-u C-u C-u = 
  </SPAN>and you get 64 equal characters on the screen. You could have done that 
  with the Esc prefix key too by pressing Esc followed by number keys <I>6</I> 
  and <I>4</I> plus the equals sign (=). Want to delete all lines to the end of 
  buffer? Use <SPAN class=compcode>C-u C-u C-u C-u C-k</SPAN>, which sends 4x4x4x4 
  (256) kill-line <A name="Index9416"></A><A name="Index9417"></A>commands.</FONT></P>
<P><FONT size=2>It is also possible to pass negative prefix arguments to commands. 
  The plain minus sign is sent with key sequence <SPAN class=compcode>C-u - </SPAN> 
  followed by <SPAN class=compcode>&lt;command&gt;</SPAN>. That did not request 
  four dashes, if you thought that it would draw a small separator on the screen. 
  Emacs reserves the minus sign for the negative prefix, because that&#039;s the 
  only way to pass signed values. If you want to pass numeric negative values, 
  you can add a<A name="Index9418"></A><A name="Index9419"></A> number: <SPAN class=compcode>C-u 
  - 2</SPAN> would pass -2 to a <SPAN class=compcode>&lt;command&gt;</SPAN>.</FONT></P>
<TABLE border="0" width="90%" cellspacing="0" cellpadding="3" align="center">
  <TR>
    <TD bgcolor="#DDDDDD">
      <P><FONT size=2><B class="specialgreen">Note -</B> <SPAN class=compcode>C-u</SPAN> 
        does not multiply when it is used for negative <A name="Index9420"></A><A name="Index9421"></A>prefixes.</FONT></P>
    </TD>
  </TR>
</TABLE>
<BR>
<P><FONT size=2>You can find a <A name="Index9422"></A><A name="Index9423"></A>use 
  for negative arguments, for example, when you adjust indentation. First, draw 
  a region, then call <SPAN class=compcode>C-u C-x Tab</SPAN> (indent-rigidly) 
  to push selected lines four spaces forward. To unindent the text, first select 
  a region or recall the previous region with <SPAN class=compcode>C-x C-x</SPAN> 
  (exchange-point-and-mark), then call <SPAN class=compcode>C-u - 4 C-x Tab</SPAN>. 
  This is same command except that you<A name="Index9424"></A><A name="Index9425"></A> 
  used -4 instead of the positive value 4. </FONT></P>
<A name="Heading474"></A>
<H3> Major Modes and Keymaps </H3>
<P><FONT size=2>As you learned earlier, the <SPAN class=compcode>global-map</SPAN> 
  rules everywhere and inside it there can be more keymaps and submap definitions. 
  There are many <A name="Index9426"></A><A name="Index9427"></A>modes in Emacs, 
  such as <SPAN class=compcode>text-mode</SPAN>, <SPAN class=compcode>mail-mode</SPAN>, 
  <SPAN class=compcode>message-mode</SPAN>, <SPAN class=compcode>c++-mode</SPAN>, 
  <SPAN class=compcode>sh-mode</SPAN>, <SPAN class=compcode>dired-mode</SPAN>, 
  <SPAN class=compcode>tar-mode</SPAN>, that need special <A name="Index9428"></A><A name="Index9429"></A>keybindings 
  to serve the mode&#039;s needs. How does a mode take over a global-map that 
  is always present? It defines its own keymap and overrides the global-map with 
  it. The dired-mode can now take control of all your regular keys such as <I>a</I>, 
  <I>b</I>, and <I>c</I> and make it easier to use the mode. </FONT></P>
<P><FONT size=2>Only one major mode <A name="Index9430"></A><A name="Index9431"></A>can 
  be active at the time. C++ editing mode (c++-mode), for example, is one major 
  mode that remaps your <SPAN class=compcode>global-map</SPAN> keys with its own 
  keymap. In C++ the key mappings are mostly designed to help you position your 
  code, to indent braces <SPAN class=compcode>{</SPAN> and <SPAN class=compcode>}</SPAN>, 
  or to indent your current line when you hit<A name="Index9432"></A><A name="Index9433"></A> 
  the Tab key. </FONT></P>
<P><FONT size=2>Each major mode keymap <A name="Index9434"></A><A name="Index9435"></A><A name="Index9436"></A>is 
  named by using the mode&#039;s name and adding a suffix <SPAN class=compcode>-keymap</SPAN> 
  to it. The major mode name is the command that turns on the major mode--for 
  example, <SPAN class=compcode>M-x text-mode</SPAN>, <SPAN class=compcode>M-x 
  c++-</SPAN>, and so on. The keymap for each mode is named respectively <SPAN class=compcode>text-mode-map</SPAN> 
  <A name="Index9437"></A><A name="Index9438"></A><A name="Index9439"></A>and 
  <SPAN class=compcode>c++-mode-map</SPAN>.</FONT></P>
<A name="Heading475"></A>
<H4> Major Mode Hook and Mode Keymaps </H4>
<P><FONT size=2>You can&#039;t use the major mode keymaps right away. The only 
  keymaps that <A name="Index9440"></A><A name="Index9441"></A><A name="Index9442"></A>are 
  immediately available in Emacs are those mentioned in the <A href="emacs200.htm" tppabs="http://freebooks.by.ru/view/EmacsIn24h/emacs200.htm">&quot;Key 
  Sequences and Keymaps&quot;</A> section earlier this hour, which were part of 
  the <SPAN class=compcode>global-map</SPAN>. Remember that <SPAN class=compcode>global-map</SPAN> 
  was always present and defined. </FONT></P>
<P><FONT size=2>The major mode&#039;s keymap does not exist until the major mode 
  has been loaded and it has defined and initialized the keymap. If you have vanilla 
  Emacs and you try to access <SPAN class=compcode>c++-mode-map</SPAN>, Emacs 
  rings a bell and tells you that &quot;Symbol&#039;s value as variable is <A name="Index9443"></A><A name="Index9444"></A><A name="Index9445"></A>void: 
  c++-mode-map.&quot; </FONT></P>
<PRE class="compcode"><FONT size=3>
<SPAN class=compcode>;; See if C-c C-c binding is defined in c++-mode-map </SPAN>
<SPAN class=compcode>(lookup-key c++-mode-map &quot;\C-c\C-c&quot;)  ;; --&gt; Signals error </SPAN>
</FONT></PRE>
<P><FONT size=2>The right moment to access a mode&#039;s keymap is when the mode 
  gets turned on. At that point, mode initializes itself and runs a MODE-hook 
  for user customizations. C++ mode runs <SPAN class=compcode>c++-mode-hook</SPAN>, 
  text mode runs <SPAN class=compcode>text-mode-hook</SPAN>, and so on. The following 
  is a solution to handle mode&#039;s keybinding settings in separate <A name="Index9446"></A><A name="Index9447"></A><A name="Index9448"></A>functions:</FONT></P>
<PRE class="compcode"><FONT size=3>
<SPAN class=compcode>(add-hook &#039;c++-mode-hook &#039;my-c++-mode-hook) </SPAN>
<SPAN class=compcode> </SPAN>
<SPAN class=compcode>(defun my-c++-mode-hook () </SPAN>
<SPAN class=compcode>   (define-key c++-mode-map [(f4)] &#039;c-indent-function)) </SPAN>
</FONT></PRE>
<P><FONT size=2>This Lisp code says <A name="Index9449"></A><A name="Index9450"></A><A name="Index9451"></A>that 
  call function <SPAN class=compcode>my-c++-mode-hook</SPAN> is used when C++ 
  mode is turned on, and key f4 defines the run command <SPAN class=compcode>c-indent-function</SPAN>.</FONT></P>
<A name="Heading476"></A>
<H3> Minor Modes and Keymaps </H3>
<P><FONT size=2>There can be<A name="Index9452"></A><A name="Index9453"></A><A name="Index9454"></A> 
  only one major mode active in a buffer, but it is possible to have any number 
  of accompanying minor modes running parallel to major mode. For example, minor 
  modes font-lock-mode and lazy-lock-mode can run at the same time as the major 
  mode c++-mode. These two minor modes highlight your current program so that 
  function names, language keywords, type definitions, and so on get a distinct 
  coloring. </FONT></P>
<P><FONT size=2>Minor modes can have keymaps that override the major mode&#039;s 
  keymap. If you have modes (A-major) and minor modes X Y Z shown in the modeline, 
  and if they all define key <SPAN class=compcode>C-c C-c</SPAN>, the leftmost 
  minor <A name="Index9455"></A><A name="Index9456"></A><A name="Index9457"></A>mode 
  sweeps the board. </FONT></P>
<A name="Heading477"></A>
<H4> Minor Mode Hook and Mode Keymap </H4>
<P><FONT size=2>While all major<A name="Index9458"></A><A name="Index9459"></A><A name="Index9460"></A> 
  modes have a MAJOR-hook, it is not always the case with minor modes. For example 
  <SPAN class=compcode>font-lock-mode</SPAN> is a minor mode and it runs <SPAN class=compcode>font-lock-mode-hook</SPAN>. 
  <SPAN class=compcode>lazy-lock-mode</SPAN> is also a minor mode, but it does 
  not have and thus doesn&#039;t run <SPAN class=compcode>lazy-lock-mode-hook</SPAN>.</FONT></P>
<P><FONT size=2>You have to examine each minor mode to see if it supports a MODE-hook, 
  where you can add minor mode keybinding customizations or other minor mode setup 
  code. Use <SPAN class=compcode>C-h v</SPAN> &lt;MODE-NAME + <SPAN class=compcode>Tab</SPAN>&gt; 
  to find your information on variables defined by minor mode. If you can complete 
  a variable name with the Tab key to end with <SPAN class=compcode>-hook</SPAN> 
  suffix, the mode (whether it&#039;s major or minor) does<A name="Index9461"></A><A name="Index9462"></A><A name="Index9463"></A> 
  have its own hook. </FONT></P>
<A name="Heading478"></A>
<H3> Clearing Keybinding in Keymaps </H3>
<P><FONT size=2>To define and modify <A name="Index9464"></A><A name="Index9465"></A><A name="Index9466"></A><A name="Index9467"></A>key 
  settings in Emacs, you have to write some Lisp code. Suppose you want to disable 
  an Emacs keybinding that you find disturbing. Do you find yourself mistakenly 
  hitting <SPAN class=compcode>C-z</SPAN> and iconifying Emacs accidentally from 
  time to time? Me too, so here is the Lisp command that makes the <SPAN class=compcode>C-z</SPAN> 
  binding go away: </FONT></P>
<PRE class="compcode"><FONT size=3>
<SPAN class=compcode>;; C-x runs Emacs command iconify-or-deiconify-frame </SPAN>
<SPAN class=compcode> (define-key global-map [(control z)] nil)<A name="Index9468"></A><A name="Index9469"></A><A name="Index9470"></A><A name="Index9471"></A> </SPAN>
</FONT></PRE>
<A name="Heading479"></A>
<H3> Creating Custom Keymaps in Global-Map </H3>
<P><FONT size=2>Let&#039;s return <A name="Index9472"></A>to that <SPAN class=compcode>C-z</SPAN> 
  binding. Suppose you still have the default binding which you can restore with 
  the following: </FONT></P>
<PRE class="compcode"><FONT size=3>
<SPAN class=compcode>(global-set-key [(control z)] &#039;iconify-or-deiconify-frame)</SPAN>
</FONT></PRE>
<P><FONT size=2>You can&#039;t assign <SPAN class=compcode>C-z</SPAN>-derived 
  keys, such as if you try to add these new bindings: </FONT></P>
<PRE class="compcode"><FONT size=3>
<SPAN class=compcode>;;  Signals error: </SPAN>
<SPAN class=compcode>;;  &quot;Key sequence control a uses invalid prefix characters&quot; </SPAN>
<SPAN class=compcode>(global-set-key [(control z) (p)] &#039;print-buffer) </SPAN>
<SPAN class=compcode>(global-set-key [(control z) (P)] &#039;print-region) </SPAN>
</FONT></PRE>
<P><FONT size=2>Why not? Because the <SPAN class=compcode>C-z</SPAN> key has already 
  been taken by iconify-or-deiconify-frame. To be able to press keys <I>after</I> 
  <SPAN class=compcode>C-z</SPAN>, the key must be made a prefix key first. You 
  make one by clearing the key<A name="Index9473"></A> as you did earlier: </FONT></P>
<PRE class="compcode"><FONT size=3>
<SPAN class=compcode>(define-key global-map [(control z)] nil)</SPAN>
</FONT></PRE>
<P><FONT size=2>Now <SPAN class=compcode>C-z</SPAN> has no definition, so you 
  can use it as a prefix key and bind more keys after it: </FONT></P>
<PRE class="compcode"><FONT size=3>
<SPAN class=compcode>(global-set-key [(control z) (p)] &#039;print-buffer) </SPAN>
<SPAN class=compcode>(global-set-key [(control z) (P)] &#039;print-region) </SPAN>
</FONT></PRE>
<P><FONT size=2>If you look at the listing <SPAN class=compcode>C-z C-h</SPAN>, 
  you see that Emacs has made a submap that<A name="Index9474"></A> is accessed 
  via <SPAN class=compcode>C-z</SPAN> (see <A href="javascript:popUp('graphics/ch23/23fig04.gif')">Figure 
  23.4</A>). </FONT></P>
<P class="figcaption"><FONT size=2><B><A href="javascript:popUp('graphics/ch23/23fig04.gif')">Figure 
  23.4</A> </B><BR>
  Output <A name="Index9475"></A>of <SPAN class=compcode>C-z C-h</SPAN>.</FONT></P>
<A name="Heading480"></A>
<H3> Know Your Environment </H3>
<P><FONT size=2>Before you <A name="Index9476"></A><A name="Index9477"></A>leap 
  into defining custom keybindings, you have to find out what kind of key sequence 
  Emacs thinks you pressed. </FONT></P>
<P><FONT size=2>Running Emacs in an X Window system is different from running 
  Emacs in console mode. The console mode can be started with the <SPAN class=compcode>-nw</SPAN> 
  (no window) command-line switch or you might be running it already inside a 
  vt100 tty or equivalent terminal. Be prepared that console Emacs can&#039;t 
  use the same bindings as the X Window version. Here is a comparison minitable 
  for Ctrl-&lt;key&gt; combinations in both environments. Notice that this listing 
  might be different in the terminal where you&#039;re running the<A name="Index9478"></A><A name="Index9479"></A> 
  Emacs: </FONT></P>
<DIV align="LEFT">
  <TABLE border>
    <TR valign="TOP"> 
      <TD colspan=1 rowspan=1 valign="TOP"> 
        <P><FONT size=2><I>Keypress</I></FONT></P>
      </TD>
      <TD colspan=1 rowspan=1 valign="TOP"> 
        <P><FONT size=2><SPAN class=compcode>-nw</SPAN></FONT></P>
      </TD>
      <TD colspan=1 rowspan=1 valign="TOP"> 
        <P><FONT size=2><I>Windowed</I></FONT></P>
      </TD>
    </TR>
    <TR valign="TOP"> 
      <TD colspan=1 rowspan=1 valign="TOP"> 
        <P><FONT size=2><SPAN class=compcode>Ctrl-right</SPAN></FONT></P>
      </TD>
      <TD colspan=1 rowspan=1 valign="TOP"> 
        <P><FONT size=2><SPAN class=compcode>Esc O C</SPAN></FONT></P>
      </TD>
      <TD colspan=1 rowspan=1 valign="TOP"> 
        <P><FONT size=2><SPAN class=compcode>C-right</SPAN></FONT></P>
      </TD>
    </TR>
    <TR valign="TOP"> 
      <TD colspan=1 rowspan=1 valign="TOP"> 
        <P><FONT size=2><SPAN class=compcode>Ctrl-left</SPAN></FONT></P>
      </TD>
      <TD colspan=1 rowspan=1 valign="TOP"> 
        <P><FONT size=2><SPAN class=compcode>Esc O D</SPAN></FONT></P>
      </TD>
      <TD colspan=1 rowspan=1 valign="TOP"> 
        <P><FONT size=2><SPAN class=compcode>C-left</SPAN></FONT></P>
      </TD>
    </TR>
    <TR valign="TOP"> 
      <TD colspan=1 rowspan=1 valign="TOP"> 
        <P><FONT size=2><SPAN class=compcode>Ctrl-up</SPAN></FONT></P>
      </TD>
      <TD colspan=1 rowspan=1 valign="TOP"> 
        <P><FONT size=2><SPAN class=compcode>Esc O A</SPAN></FONT></P>
      </TD>
      <TD colspan=1 rowspan=1 valign="TOP"> 
        <P><FONT size=2><SPAN class=compcode>C-up</SPAN></FONT></P>
      </TD>
    </TR>
    <TR valign="TOP"> 
      <TD colspan=1 rowspan=1 valign="TOP"> 
        <P><FONT size=2><SPAN class=compcode>Ctrl-down</SPAN></FONT></P>
      </TD>
      <TD colspan=1 rowspan=1 valign="TOP"> 
        <P><FONT size=2><SPAN class=compcode>Esc O B</SPAN></FONT></P>
      </TD>
      <TD colspan=1 rowspan=1 valign="TOP"> 
        <P><FONT size=2><SPAN class=compcode>C-down</SPAN></FONT></P>
      </TD>
    </TR>
    <TR valign="TOP"> 
      <TD colspan=1 rowspan=1 valign="TOP"> 
        <P><FONT size=2><SPAN class=compcode>Ctrl-RET</SPAN></FONT></P>
      </TD>
      <TD colspan=1 rowspan=1 valign="TOP"> 
        <P><FONT size=2><SPAN class=compcode>RET</SPAN></FONT></P>
      </TD>
      <TD colspan=1 rowspan=1 valign="TOP"> 
        <P><FONT size=2><SPAN class=compcode>C-return &lt;&lt;bold</SPAN></FONT></P>
      </TD>
    </TR>
    <TR valign="TOP"> 
      <TD colspan=1 rowspan=1 valign="TOP"> 
        <P><FONT size=2><SPAN class=compcode>Shift-RET</SPAN></FONT></P>
      </TD>
      <TD colspan=1 rowspan=1 valign="TOP"> 
        <P><FONT size=2><SPAN class=compcode>RET</SPAN></FONT></P>
      </TD>
      <TD colspan=1 rowspan=1 valign="TOP"> 
        <P><FONT size=2><SPAN class=compcode>S-return &lt;&lt;bold</SPAN></FONT></P>
      </TD>
    </TR>
  </TABLE>
</DIV>
<BR>
<P><FONT size=2>Look closely at <A name="Index9480"></A><A name="Index9481"></A>the 
  last rows: In a nonwindowed environment the Shift and Ctrl modifiers are not 
  recognized for these keys, whereas Ctrl-a and Shift-a are. In the nonwindowed 
  Emacs, the cursor keys are recognized as a combination of separate characters. 
  The cursor keys appear in this case under<A name="Index9482"></A><A name="Index9483"></A> 
  the <SPAN class=compcode>Esc O</SPAN> prefix key. </FONT></P>
<A name="Heading481"></A>
<H3> Finding the Key Sequence Syntax </H3>
<P><FONT size=2>The most<A name="Index9484"></A><A name="Index9485"></A> convenient 
  way to find out the key sequence syntax is to press the keys and recall the 
  input with command <SPAN class=compcode>C-h l</SPAN> (view-lossage). Follow 
  these steps: </FONT></P>
<DL> 
  <DT>
  <DD>
    <P> <B><FONT size=2>1. </FONT></B><FONT size=2>Press the <I>x</I> key three 
      times. </FONT></P>
  <DT>
  <DD>
    <P> <B><FONT size=2>2. </FONT></B><FONT size=2>Press a key sequence, say Ctrl-Alt-a. 
      </FONT></P>
  <DT>
  <DD>
    <P> <B><FONT size=2>3. </FONT></B><FONT size=2>Press the <I>x</I> key three 
      times. </FONT></P>
  <DT>
  <DD>
    <P> <B><FONT size=2>4. </FONT></B><FONT size=2>Recall the view-lossage with 
      <SPAN class=compcode>C-h l</SPAN>.</FONT>
</DL>
<FONT size=2>
<P></P>
<P><FONT size=2>The output of the buffer contains the key sequence syntax that 
  you can use. Look for text in the buffer that looks like the <A name="Index9486"></A><A name="Index9487"></A>following:</FONT></P>
<PRE class="compcode"><FONT size=3>
<SPAN class=compcode>x x x M-C-a x x x C-h l</SPAN>
</FONT></PRE>
<P><FONT size=2>Between the <SPAN class=compcode>x</SPAN>&#039;s you see the key 
  sequence. The Emacs keybinding syntax for this sequence is </FONT></P>
<PRE class="compcode"><FONT size=3>
<SPAN class=compcode>(global-set-key [(meta control a)] &#039;beginning-of-defun) ;; Go to function</SPAN>
</FONT></PRE>
<P><FONT size=2>The syntax is written inside <SPAN class=compcode>[]</SPAN>. The 
  parentheses <SPAN class=compcode>()</SPAN> close a single key sequence and each 
  <SPAN class=compcode>M</SPAN> and <SPAN class=compcode>C</SPAN> have been converted 
  to lowercase <SPAN class=compcode>meta</SPAN> and <SPAN class=compcode>control</SPAN> 
  modifier names. This universal keybinding syntax works between a variety of 
  Emacs and XEmacs<A name="Index9488"></A><A name="Index9489"></A> platforms. 
  </FONT></P>
<P><FONT size=2>How about mouse keybindings? They can be found as easily as the 
  keyboard bindings. Try pressing <SPAN class=compcode>Ctrl-Alt-mouse-1</SPAN> 
  and <SPAN class=compcode>Ctrl-Alt-mouse-2</SPAN> and check<A name="Index9490"></A><A name="Index9491"></A> 
  the results from <SPAN class=compcode>C-h l</SPAN> buffer: </FONT></P>
<PRE class="compcode"><FONT size=3>
<SPAN class=compcode>C-M-down-mouse-1 C-M-down-mouse-2</SPAN>
</FONT></PRE>
<P><FONT size=2>These key sequences can be bound to conveniently scroll your current 
  buffer: </FONT></P>
<PRE class="compcode"><FONT size=3>
<SPAN class=compcode>(global-set-key [(control meta mouse-1)] &#039;scroll-up)    ;; Like Page down key </SPAN>
<SPAN class=compcode>(global-set-key [(control meta mouse-2)] &#039;scroll-down)  ;; Like Page up key </SPAN>
</FONT></PRE>
<P><FONT size=2>Look at more<A name="Index9492"></A><A name="Index9493"></A> examples. 
  You want to bind <SPAN class=compcode>Ctrl-F1</SPAN>:</FONT></P>
<PRE class="compcode"><FONT size=3>
<SPAN class=compcode>;;  C-h l reads:  C-f1, so here is the binding </SPAN>
<SPAN class=compcode>(global-set-key [(control f1)] &#039;shell) </SPAN>
</FONT></PRE>
<P><FONT size=2>Or maybe bring up a diary with <SPAN class=compcode>Ctrl-Alt-d</SPAN>. 
  Pay attention to the meta modifier; which was produced by this keyboard: </FONT></P>
<PRE class="compcode"><FONT size=3>
<SPAN class=compcode>;; C-h l reads: M-C-d; which was useless down-list command </SPAN>
<SPAN class=compcode>(global-set-key [(meta control ?d)] &#039;diary) </SPAN>
</FONT></PRE>
<P><FONT size=2>In some other <A name="Index9494"></A><A name="Index9495"></A>keyboards 
  the previous example could read as the following: </FONT></P>
<PRE class="compcode"><FONT size=3>
<SPAN class=compcode>;; C-h l output reads: A-C-d </SPAN>
<SPAN class=compcode>(global-set-key [(alt control ?d)] &#039;diary) </SPAN>
</FONT></PRE>
<P><FONT size=2>The <SPAN class=compcode>compile</SPAN> command doesn&#039;t seem 
  to have a default keybinding, so let&#039;s<A name="Index9496"></A><A name="Index9497"></A> 
  map it to <SPAN class=compcode>Alt-f12</SPAN>:</FONT></P>
<PRE class="compcode"><FONT size=3>
<SPAN class=compcode> ;; C-h l output reads: M-f12 </SPAN>
<SPAN class=compcode>(global-set-key [(meta f12)] &#039;compile) </SPAN>
</FONT></PRE>
<P><FONT size=2>What if you map <SPAN class=compcode>Esc-mouse-1</SPAN> to run 
  command imenu, which brings up a function summary in programming modes? Pay 
  attention that mouse buttons generate multiple events and you need only the 
  button press event, which is <SPAN class=compcode>mouse-1</SPAN>. Also note 
  that Esc is part of the ASCII code table and can be represented with <SPAN class=compcode>?\e</SPAN> 
  escape code. You use that and not the &quot;escape&quot; event <A name="Index9498"></A><A name="Index9499"></A>name:</FONT></P>
<PRE class="compcode"><FONT size=3>
<SPAN class=compcode>;; C-h l output reads: escape down-mouse-1 mouse-1 </SPAN>
<SPAN class=compcode>(global-set-key [(?\e mouse-1)] &#039;compile) </SPAN>
</FONT></PRE>
<A name="Heading482"></A>
<H3> Recording and Running a Macro with Easier Keybindings </H3>
<P><FONT size=2>One of the handiest features in Emacs is the capability to record 
  keyboard activities and play them back later. The macros<A name="Index9500"></A><A name="Index9501"></A> 
  are suitable for ad hoc tasks where you have a repeated editing task in the 
  buffer. The Emacs default macro keybindings <SPAN class=compcode>C-x (</SPAN>. 
  and <SPAN class=compcode>C-x )</SPAN> have been assigned to uncomfortable key 
  sequences, so let&#039;s remap them to faster keys: </FONT></P>
<PRE class="compcode"><FONT size=3>
<SPAN class=compcode>            (global-set-key [(control ?\()] &#039;start-kbd-macro) </SPAN>
<SPAN class=compcode>            (global-set-key [(control ?\))] &#039;end-kbd-macro) </SPAN>
<SPAN class=compcode>            (global-set-key [(control ?\=)] [ja1]&#039;call-last-kbd-macro) </SPAN>
</FONT></PRE>
<P><FONT size=2>You picked<A name="Index9502"></A><A name="Index9503"></A> three 
  close keys from the top row and assigned them to macro commands: Hold down Ctrl-Shift-8 
  (choose the <I>8</I> that&#039;s in the top row of the keyboard) and you can 
  start recording a macro. Hold down Ctrl-Shift-9 (choose the <I>9</I> the top 
  row) to stop recording the macro. Finally press Ctrl-Shift-0 to play the recorded 
  macro. </FONT></P>
<P><FONT size=2>You see something new in this global-set-key Lisp call. When you 
  map keys, Emacs can interpret normal ASCII characters as usual with (<SPAN class=compcode>Ctrl-a</SPAN>), 
  but if you map something outside of regular ASCII range, you have to use Emacs 
  character syntax, where a character is denoted with a question mark. <SPAN class=compcode>[(Ctrl-a)]</SPAN> 
  can be represented with <SPAN class=compcode>[(Ctrl-?a)]</SPAN> and with <SPAN class=compcode>[(Ctrl-?\a)]</SPAN> 
  syntaxes. That extra backslash means &quot;take the next character<A name="Index9504"></A><A name="Index9505"></A> 
  literally.&quot; </FONT></P>
<TABLE border="0" width="90%" cellspacing="0" cellpadding="3" align="center">
  <TR>
    <TD bgcolor="#DDDDDD">
      <P><FONT size=2><B class="specialred">Caution -</B> Keep in mind which<A name="Index9506"></A><A name="Index9507"></A><A name="Index9508"></A> 
        are your ASCII keys in the keyboard and which are named events. Emacs 
        doesn&#039;t always do the thinking for you. For example, what if you 
        want to map <SPAN class=compcode>Meta-space</SPAN> to a filename completing 
        command? Press <SPAN class=compcode>Meta-Space</SPAN> and recall the presentation 
        from <SPAN class=compcode>C-h l</SPAN> and it tells you: </FONT></P>
      <P><FONT size=2> <SPAN class=compcode>escape SPC</SPAN></FONT></P>
      <FONT size=2>
      <P><FONT size=2> But that&#039;s not what you should bind. First, a space 
        is ASCII code 32 or &quot; &quot; and, second, the Meta keys could have 
        been your Esc or Alt key. If you try to<A name="Index9509"></A><A name="Index9510"></A><A name="Index9511"></A> 
        bind the key directly from copying the <SPAN class=compcode>C-h l</SPAN> 
        syntax, it goes wrong: </FONT></P>
      <P><FONT size=2> <SPAN class=compcode>;; With autoload we tell Emacs that 
        &#039;comint-dynamic-complete <BR>
        </SPAN><FONT size=2><SPAN class=compcode>;; command comes from package 
        &quot;comint&quot;. <BR>
        </SPAN><FONT size=2><SPAN class=compcode>(autoload &#039;comint-dynamic-complete 
        &quot;comint&quot; nil t) <BR>
        </SPAN><FONT size=2><SPAN class=compcode>(global-set-key [(escape SPC)] 
        &#039;comint-dynamic-complete) <BR>
        </SPAN><FONT size=2><SPAN class=compcode>--&gt; Signals error &quot;two 
        bases given in one event&quot;</SPAN></FONT></FONT></FONT></FONT></FONT></P>
      <FONT size=2><FONT size=2><FONT size=2><FONT size=2><FONT size=2>
      <P><FONT size=2> Instead, write the call this way: first the modifier and 
        then the ASCII code. Space is not a named event although Emacs seemed 
        to show the key that way. Be careful that you preserve space after<A name="Index9512"></A><A name="Index9513"></A><A name="Index9514"></A> 
        backslash: </FONT></P>
      <P><FONT size=2> <SPAN class=compcode>(global-set-key [(meta ?\ )] &#039;comint-dynamic-complete)</SPAN></FONT></P>
    </FONT></FONT></FONT></FONT></FONT></FONT></TD>
  </TR>
</TABLE>
<A name="Heading483"></A> 
<H3> Passing Arguments to Commands </H3>
<P><FONT size=2>You have only<A name="Index9515"></A><A name="Index9516"></A> 
  seen how single functions can be bound to keys; but what if you want to always 
  pass a certain prefix argument to the function? Take, for example, C++ mode 
  and commenting. Go to an empty buffer and call <SPAN class=compcode>M-x c++-mode</SPAN>. 
  The mode line indicator shows that your major mode is &quot;(C++)&quot;. To 
  peek at the mode&#039;s bindings, press key sequence <SPAN class=compcode>C-h 
  m</SPAN> (describe-mode) and find comment-region, which is bound to <A name="Index9517"></A><A name="Index9518"></A>key 
  <SPAN class=compcode>C-c C-c</SPAN>. Follow these steps: </FONT></P>
<DL> 
  <DT>
  <DD>
    <P> <B><FONT size=2>1. </FONT></B><FONT size=2>Type two lines of text into 
      the buffer. </FONT></P>
  <DT>
  <DD>
    <P> <B><FONT size=2>2. </FONT></B><FONT size=2>Draw a region over those lines. 
      </FONT></P>
  <DT>
  <DD>
    <P> <B><FONT size=2>3. </FONT></B><FONT size=2>Press <SPAN class=compcode>C-c 
      C-c</SPAN> to comment the region. </FONT> 
  </DL>
<FONT size=2>
<P></P>
<P><FONT size=2>The next question is how you uncomment the region. Examine what 
  the comment-region function definition says with <SPAN class=compcode>C-h k 
  C-c C-c</SPAN>. I&#039;ve included only some relevant lines from that description 
  below: </FONT></P>
<PRE class="compcode"><FONT size=3>
<SPAN class=compcode>(comment-region BEG END &amp;optional ARG) </SPAN>
<SPAN class=compcode>... </SPAN>
<SPAN class=compcode>With just C-u prefix arg, uncomment each line in region. </SPAN>
</FONT></PRE>
<P><FONT size=2>The need to pass <SPAN class=compcode>C-u</SPAN> argument to the 
  <SPAN class=compcode>C-c C-c</SPAN> key sequence might not look like much trouble, 
  but it soon starts to be when you work with the code longer. And it would be 
  nice if you wouldn&#039;t have to stress your pinky to access <SPAN class=compcode>C-c 
  C-c</SPAN> in a long editing session. Let&#039;s move the comment and uncomment 
  commands to function keys f5 and f6, which are more easily accessible. Recall 
  the previously mentioned C++ setting example and add<A name="Index9519"></A><A name="Index9520"></A> 
  couple of new Lisp lines to it: </FONT></P>
<PRE class="compcode"><FONT size=3>
<SPAN class=compcode>(add-hook &#039;c++-mode-hook &#039;my-c++-mode-hook) </SPAN>
<SPAN class=compcode> </SPAN>
<SPAN class=compcode>(defun my-c++-mode-hook () </SPAN>
<SPAN class=compcode> (define-key c++-mode-map [(f4)] &#039;c-indent-function) </SPAN>
<SPAN class=compcode> (define-key c++-mode-map [(f5)] &#039;comment-region) </SPAN>
<SPAN class=compcode> (define-key c++-mode-map [(f6)] (definteractive (comment-region &#039;(4)))) </SPAN>
<SPAN class=compcode> ) </SPAN>
</FONT></PRE>
<P><FONT size=2>The macro <SPAN class=compcode>definteractive</SPAN> is not part 
  of the default Emacs command set, but you can find it from the CD by loading 
  <SPAN class=compcode>sams-lib.el</SPAN>. You attached your first customized 
  function call into key. <SPAN class=compcode>definteractive</SPAN> declares 
  an anonymous function at point with the body containing a call to comment region 
  with argument <SPAN class=compcode>&#039;(4)</SPAN>, which is the Lisp representation 
  for the <SPAN class=compcode>C-u</SPAN> prefix argument. The function key F6 
  now always calls function comment-region with prefix <SPAN class=compcode>C-u</SPAN> 
  and you don&#039;t have to type it as in the original c++-mode-map binding <SPAN class=compcode>C-u 
  C-c C-c</SPAN> Commenting and uncommenting a region is only two keypresses <A name="Index9521"></A><A name="Index9522"></A>away!</FONT></P>
</FONT></FONT></FONT>
<TABLE border="0" width="99%" cellspacing="0" cellpadding="3">
  <TR> 
    <TD background="graphics/blstrbkg.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/blstrbkg.gif"  bgcolor="#666699"> 
      <P> <FONT color="#FFFFFF"><B>Sams Teach Yourself Emacs<FONT size="1"></FONT> 
        in 24 Hours</B> </FONT></P>
    </TD>
    <TD background="graphics/blstrbkg.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/blstrbkg.gif" bgcolor="#666699"><FONT size="2"><IMG src="../style/dot.gif" tppabs="http://freebooks.by.ru/view/style/dot.gif" width="10" height="1"></FONT></TD>
    <TD background="graphics/blstrbkg.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/blstrbkg.gif" bgcolor="#666699" nowrap align="right"> 
      <P><A href="index.htm" tppabs="http://freebooks.by.ru/view/EmacsIn24h/index.htm"><FONT size="2" color="#FFFFFF">Contents</FONT></A><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"><A href="bkindex.htm" tppabs="http://freebooks.by.ru/view/EmacsIn24h/bkindex.htm"><FONT size="2" color="#FFFFFF">Index</FONT></A></P>
    </TD>
  </TR>
  <TR> 
    <TD bgcolor="#AAAAAA" height="16"> 
      <P><FONT size="2">Hour 23: Binding Keys and Creating Menus</FONT></P>
    </TD>
    <TD bgcolor="#AAAAAA" height="16"><FONT size="2"><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"></FONT></TD>
    <TD bgcolor="#AAAAAA" height="16" align="right" nowrap> 
      <P><FONT size="2"><A href="emacs188.htm" tppabs="http://freebooks.by.ru/view/EmacsIn24h/emacs188.htm"><IMG src="graphics/prev-on.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/prev-on.gif" width="7" height="5" border="0">Previous 
        Hour</A><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"><A href="emacs206.htm" tppabs="http://freebooks.by.ru/view/EmacsIn24h/emacs206.htm">Next 
        Hour<IMG src="graphics/next-on.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/next-on.gif" width="7" height="5" border="0"></A></FONT></P>
    </TD>
  </TR>
  <TR> 
    <TD bgcolor="#DDDDDD"> 
      <TABLE border="0" cellspacing="0" cellpadding="0" dwcopytype="CopyTableRow">
        <TR valign="top"> 
          <TD> 
            <P></P>
            <P><FONT size="2">Sections in this Hour:</FONT></P>
          </TD>
          <TD><FONT size="2"><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"></FONT></TD>
          <TD><FONT size="2"><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"></FONT></TD>
        </TR>
        <TR valign="top"> 
          <TD> 
            <P class="navigation"><FONT size="1"><A href="emacs197.htm#c1" tppabs="http://freebooks.by.ru/view/EmacsIn24h/emacs197.htm#c1">Keyboard 
              Modifiers</A> </FONT></P>
          </TD>
          <TD><FONT size="2"><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"></FONT></TD>
          <TD> 
            <P class="navigation"><FONT size="1"><A href="emacs201.htm" tppabs="http://freebooks.by.ru/view/EmacsIn24h/emacs201.htm">Making 
              Personal Keybindings</A> </FONT></P>
          </TD>
        </TR>
        <TR valign="top"> 
          <TD> 
            <P class="navigation"><FONT size="1"><A href="emacs198.htm" tppabs="http://freebooks.by.ru/view/EmacsIn24h/emacs198.htm">Keyboard 
              and Events</A></FONT></P>
          </TD>
          <TD><FONT size="2"><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"></FONT></TD>
          <TD> 
            <P class="navigation"><FONT size="1"><A href="emacs202.htm" tppabs="http://freebooks.by.ru/view/EmacsIn24h/emacs202.htm">Summary</A> 
              </FONT></P>
          </TD>
        </TR>
        <TR valign="top"> 
          <TD> 
            <P class="navigation"><FONT size="1"><A href="emacs199.htm" tppabs="http://freebooks.by.ru/view/EmacsIn24h/emacs199.htm">Mouse 
              and Events</A> </FONT></P>
          </TD>
          <TD><FONT size="2"><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"></FONT></TD>
          <TD> 
            <P class="navigation"><FONT size="1"><A href="emacs203.htm" tppabs="http://freebooks.by.ru/view/EmacsIn24h/emacs203.htm">Q&amp;A</A> 
              </FONT></P>
          </TD>
        </TR>
        <TR valign="top"> 
          <TD> 
            <P class="navigation"><FONT size="1">Key Sequences and Keymaps </FONT></P>
          </TD>
          <TD><FONT size="2"><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"></FONT></TD>
          <TD> 
            <P class="navigation"><FONT size="1"><A href="emacs204.htm" tppabs="http://freebooks.by.ru/view/EmacsIn24h/emacs204.htm">Exercises</A> 
              </FONT></P>
          </TD>
        </TR>
      </TABLE>
    </TD>
    <TD bgcolor="#DDDDDD">&nbsp;</TD>
    <TD bgcolor="#DDDDDD" align="right" nowrap valign="bottom"> 
      <P class="navigation"><FONT size="2"><A href="emacs199.htm" tppabs="http://freebooks.by.ru/view/EmacsIn24h/emacs199.htm"><IMG src="graphics/prev-on.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/prev-on.gif" width="7" height="5" border="0">Previous 
        Section</A><IMG src="graphics/dot.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/dot.gif" width="10" height="1"><A href="emacs201.htm" tppabs="http://freebooks.by.ru/view/EmacsIn24h/emacs201.htm">Next 
        Section<IMG src="graphics/next-on.gif" tppabs="http://freebooks.by.ru/view/EmacsIn24h/graphics/next-on.gif" width="7" height="5" border="0"></A></FONT></P>
    </TD>
  </TR>
</TABLE>
<P class="copyright"><FONT size=2>&#169; Copyright Macmillan USA. All rights reserved.</FONT> 
</P>
</BODY></HTML>
